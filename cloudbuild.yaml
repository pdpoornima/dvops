options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_MEDIUM'  # Match the cluster's node type

steps:
  # Step 1: Set up Terraform (Initialize)
  - name: 'hashicorp/terraform:1.0.0'
    id: 'terraform-init'
    args:
      - 'init'

  # Step 2: Plan the Terraform changes for GKE cluster
  - name: 'hashicorp/terraform:1.0.0'
    id: 'terraform-plan'
    args:
      - 'plan'
      - '-out=tfplan'

  # Step 3: Apply the Terraform plan (create the GKE cluster)
  - name: 'hashicorp/terraform:1.0.0'
    id: 'terraform-apply'
    args:
      - 'apply'
      - '-auto-approve'
      - 'tfplan'

  # Step 4: Authenticate with the newly created GKE cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'gke-auth'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'my-gke-cluster'  # Ensure this matches your cluster's name in main.tf
      - '--zone'
      - 'us-east5-a'
      - '--project'
      - 'devops-433705'  # Use substitutions for the project ID

  # Step 5: Apply the deployment and service YAMLs from kustomize
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud config set compute/region us-east5
        gcloud config set compute/zone us-east5-a
        kubectl apply -k kustomize/base

# Timeout to allow sufficient time for Terraform and Kubernetes tasks
timeout: 1800s